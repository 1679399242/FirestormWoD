branches:
  - wod
  - wod_ptr

clone:
  depth: 20
  recursive: true
  submodule_update_remote: true

build:
  before_build:
    image: milleniumstudio/drone-clang-mariadb-ace
    commands:
      - mkdir build
      - mkdir -p dist/{bin,lib}
  testing:
    image: milleniumstudio/drone-clang-mariadb-ace
    commands:
      - cd build
      - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer" -DCMAKE_C_FLAGS="-fsanitize=address -fno-omit-frame-pointer" -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DTOOLS=0
      - make -j 32
      - make install
      - ls -la /usr/local/bin; ls -la /usr/local/etc; ls -la /usr/local/etc/firestorm;
      - mv /usr/local/bin/worldserver dist/bin/worldserver_DebugAsan
      - make clean
      - cd -
    when:
      branch: wod_ptr
  release:
    image: milleniumstudio/drone-clang-mariadb-ace
    commands:
      - cd build
      - cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DTOOLS=0
      - make -j 32
      - make install
      - mv /usr/local/bin/worldserver dist/bin/worldserver_RelWithDebInfo
      - make clean
      - cd -
    when:
      branch: wod
  release_asan:
    image: milleniumstudio/drone-clang-mariadb-ace
    commands:
      - cd build
      - cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer" -DCMAKE_C_FLAGS="-fsanitize=address -fno-omit-frame-pointer" -DWITH_WARNINGS=0 -DWITH_COREDEBUG=0 -DTOOLS=0
      - make -j 32
      - make install
      - mv /usr/local/bin/worldserver dist/bin/worldserver_RelWithDebInfoAsan
      - make clean
      - cd -
    when:
      branch: wod
  after_build:
    image: milleniumstudio/drone-clang-mariadb-ace
    commands:
      - cp -p contrib/deploy/worldserver_restarter dist/bin

publish:
  docker:
    username: $$DOCKER_USER
    password: $$DOCKER_PASS
    email: $$DOCKER_EMAIL
    repo: milleniumstudio/docker-wod
    tag: latest-ptr
    file: dist/Dockerfile
    context: dist/
    when:
      branch: wod_ptr
  docker:
    username: $$DOCKER_USER
    password: $$DOCKER_PASS
    email: $$DOCKER_EMAIL
    repo: milleniumstudio/docker-wod
    tag: latest
    file: dist/Dockerfile
    context: dist/
    when:
      branch: wod

notify:
  slack:
    webhook_url: https://hooks.slack.com/services/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
    channel: wow-notification
    username: Drone
    template: >
      Build <https://drone.firestorm-servers.com/MilleniumStudio/wod/{{ build.number }}|{{ repo.name }}#{{ truncate build.commit 7 }}> ({{ build.branch }}) by {{ build.author }} finished with a *{{ build.status }}* status in {{ duration build.started_at build.finished_at }}
