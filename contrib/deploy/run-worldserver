#!/bin/bash

# These variables are replaced at drone build
repo=@REPO@
commit=@COMMIT@

function sendToSlack {
    msg=$1
    color=$2
    slack_hook_urls=("https://hooks.slack.com/services/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")

    for hook_url in "${slack_hook_urls[@]}"
    do
        curl -X POST \
             --data-urlencode 'payload={"attachments": [{"pretext": "*'"$REALM_VERSION"'*", "text": "'"$msg"'", "color": "'"$color"'", "mrkdwn_in": ["pretext", "text"]}]}' \
             $hook_url
    done
}

function updateSQL {
    cat /usr/local/share/firestorm/sql/characters/*.sql > /tmp/characters.sql
    mysql \
        -h "$MYSQL_CHAR_ADDR" \
        -u $MYSQL_CHAR_USER \
        -p$MYSQL_CHAR_PASSWD \
        -f \
        $MYSQL_CHAR_TABLE < /tmp/characters.sql 2> /tmp/sql-updates-errors.log

    cat /usr/local/share/firestorm/sql/world/*.sql > /tmp/world.sql
    mysql \
        -h "$MYSQL_WORLD_ADDR" \
        -u $MYSQL_WORLD_USER \
        -p$MYSQL_WORLD_PASSWD \
        -f \
        $MYSQL_WORLD_TABLE < /tmp/world.sql 2>> /tmp/sql-updates-errors.log

    #cat /usr/local/share/firestorm/sql/hotfix/*.sql > /tmp/hotfix.sql
    #mysql \
    #    -h "$MYSQL_HOTFIX_ADDR" \
    #    -u $MYSQL_HOTFIX_USER \
    #    -p$MYSQL_HOTFIX_PASSWD \
    #    -f \
    #    $MYSQL_HOTFIX_TABLE < /tmp/hotfix.sql 2>> /tmp/sql-updates-errors.log

    if [ -f /tmp/sql-updates-errors.log -a -s /tmp/sql-updates-errors.log ]; then
        mv /tmp/sql-updates-errors.log /usr/local/var/log/firestorm
        sendToSlack "_${REALM_NAME}_ is starting with SQL errors in update files <$HOST_ADDR/logs_42x/$REALM_NAME/sql-updates-errors.log|Show more...>" "warning"
    fi
}

function runWorldserver {
    # Increase allowed file descriptors
    ulimit -n 4096

    if [ $ASAN_MODE -eq 1 ]; then
        # for options see https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags
        export ASAN_OPTIONS=abort_on_error=1:detect_leaks=0:symbolize=1
        export ASAN_SYMBOLIZER_PATH=$(which llvm-symbolizer-3.5)

        worldserver_RelWithDebInfoAsan 2> /tmp/backtrace.log
    else
        gdb -batch -x=/usr/local/etc/commands.gdb worldserver_RelWithDebInfo
    fi
}

function analyseCrash {
    crashlog_filename="crashdump_$(date +\%Y-\%m-\%d-\%H-\%M-\%S).log"
    crashlog_link="$HOST_ADDR/logs_42x/$REALM_NAME/crashlogs/$crashlog_filename"

    if [ $ASAN_MODE -eq 1 ]; then
        # cleanup backtrace.log to get only asan output
        csplit --prefix=/tmp/backtrace-split.log --quiet /tmp/backtrace.log "/================/+1"; mv -f /tmp/backtrace-split.log01 /tmp/backtrace.log

        crash_location=$(grep -m 1 -P 'in.*src\/server' /tmp/backtrace.log)
        crash_in=$(echo $crash_location | grep -oP 'in \K(.*)(?= )')
        crash_at=$(echo $crash_location | grep -oP ' /.*/\K(.*)')
    else
        crash_location=$(grep -m 1 -P 'in .* at' /tmp/backtrace.log)
        crash_in=$(echo $crash_location | grep -oP 'in \K(.*)(?= at)')
        crash_at=$(echo $crash_location | grep -oP 'at /.*/\K(.*)')
    fi

    sendToSlack "_${REALM_NAME}_ (<https://github.com/$repo/commit/$commit|${commit:0:7}>) crashed in \`$crash_in\` at \`$crash_at\` <$crashlog_link|Show more...>" "danger"

    # Only if it's a crash we made the log avalaible
    cp /tmp/backtrace.log /usr/local/var/log/firestorm/crashlogs/$crashlog_filename
}

function isCrash {
    echo $(grep -m1 -icP 'SIGABRT|SIGSEGV|ERROR: AddressSanitizer' /tmp/backtrace.log)
}

function isShutdown {
    exit_code=$1

    if [ $exit_code -eq 0 -o $(grep -m1 -ic 'exited with code 02' /tmp/backtrace.log) -eq 1 ]; then
        echo 1
    else
        echo 0
    fi
}

function isReboot {
    exit_code=$1

    if [ $exit_code -eq 2 -o $(grep -m1 -ic 'exited normally' /tmp/backtrace.log) -eq 1 ]; then
        echo 1
    else
        echo 0
    fi
}

function isKilled {
    exit_code=$1

    if [ $exit_code -eq 137 -o $(grep -m1 -icP 'SIGTERM|SIGINT' /tmp/backtrace.log) -eq 1 ]; then
        echo 1
    else
        echo 0
    fi
}

###### MAIN ######

updateSQL
runWorldserver
worldserver_exit_code=$?

if [ "$(isCrash)" -eq 1 ]; then
    analyseCrash
elif [ "$(isShutdown $worldserver_exit_code)" -eq 1 ]; then
    sendToSlack "_${REALM_NAME}_ has been shut down." "good"
elif [ "$(isReboot $worldserver_exit_code)" -eq 1 ]; then
    sendToSlack "_${REALM_NAME}_ has been rebooted." "good"
elif [ "$(isKilled $worldserver_exit_code)" -eq 1 ]; then
    sendToSlack "_${REALM_NAME}_ has been killed." "danger"
fi
